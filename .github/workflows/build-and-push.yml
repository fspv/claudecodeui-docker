name: Build and Push Docker Image

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:
    inputs:
      claudecodeui_version:
        description: 'claudecodeui version to build'
        required: false
        type: string

env:
  REGISTRY: docker.io
  IMAGE_NAME: nuhotetotniksvoboden/claudecodeui

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get claudecodeui version
      id: version
      run: |
        if [ -n "${{ inputs.claudecodeui_version }}" ]; then
          echo "claudecodeui_version=${{ inputs.claudecodeui_version }}" >> $GITHUB_OUTPUT
          echo "Building specific version: ${{ inputs.claudecodeui_version }}"
        else
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/siteboon/claudecodeui/releases/latest | jq -r '.tag_name')
          echo "claudecodeui_version=$LATEST_RELEASE" >> $GITHUB_OUTPUT
          echo "Building latest version: $LATEST_RELEASE"
        fi

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ steps.version.outputs.claudecodeui_version }},enable=true

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max